---
version: 1.1.x.{build}
branches:
  only:
    - master
    - release
clone_depth: 10
init:
  - SET
  - 'mkdir C:\ProgramData\PuppetLabs\code && exit 0'
  - 'mkdir C:\ProgramData\PuppetLabs\facter && exit 0'
  - 'mkdir C:\ProgramData\PuppetLabs\hiera && exit 0'
  - 'mkdir C:\ProgramData\PuppetLabs\puppet\var && exit 0'
environment:
  matrix:
    -
      RUBY_VERSION: 25-x64
      CHECK: rubocop
    -
      RUBY_VERSION: 25
      CHECK: spec
      COVERAGE: yes
    -
      RUBY_VERSION: 25-x64
      ACCEPTANCE: yes
      TARGET_HOST: localhost
    -
      RUBY_VERSION: 25-x64
      ACCEPTANCE: yes
      TARGET_HOST: localhost
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
for:
-
  matrix:
    only:
      - ACCEPTANCE: yes
  install:
    - pwsh: |
        $ErrorActionPreference = 'Stop'
        $ENV:PATH = "C:\Ruby${ENV:RUBY_VERSION}\bin;${ENV:PATH}"
        git clone --depth 1 https://github.com/puppetlabs/puppetlabs-motd motd
        if(-not $?) { Write-Error -Message "failed to clone motd" }
        Push-Location motd
        if([string]::IsNullOrEmpty($ENV:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME)) {
          $URL = "'https://github.com/${ENV:APPVEYOR_REPO_NAME}'"
          $Branch = "'${ENV:APPVEYOR_REPO_BRANCH}'"
        } Else {
          $URL = "'https://github.com/${ENV:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME}'"
          $Branch = "'${ENV:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH}'"
        }
        Write-Host $URL
        Write-Host $Branch
        "gem 'puppet_litmus', require: false, git: $URL, branch: $Branch" >> Gemfile

        bundle config gemfile ./Gemfile
        if(-not $?) { Write-Error -Message "failed to set gemfile" }
        bundle config path '../vendor/bundle'
        if(-not $?) { Write-Error -Message "failed to set path" }
        bundle config with development
        if(-not $?) { Write-Error -Message "failed to set with development" }

        bundle install --jobs 4 --retry 2
        if(-not $?) { Write-Error -Message "failed to install gems" }
        Get-Content Gemfile.lock
  test_script:
    - pwsh: |
        $ErrorActionPreference = 'Stop'
        $ENV:PATH = "C:\Ruby${ENV:RUBY_VERSION}\bin;${ENV:PATH}"
        Push-Location motd
        Get-Location
        bundle exec puppet -V
        ruby -v
        gem -v
        bundle -v
        bundle exec rake spec_prep
        if(-not $?) { Write-Error -Message "spec_prep failed" }
        bundle exec rake litmus:acceptance:localhost
        if(-not $?) { Write-Error -Message "litmus:acceptance:localhost failed" }
matrix:
  fast_finish: true
install:
  - set PATH=C:\Ruby%RUBY_VERSION%\bin;%PATH%
  - bundle install --jobs 4 --retry 2 --without system_tests
  - type Gemfile.lock
build: off
test_script:
  - bundle exec puppet -V
  - ruby -v
  - gem -v
  - bundle -v
  - bundle exec rake %CHECK%
notifications:
  - provider: Email
    to:
      - nobody@nowhere.com
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false
